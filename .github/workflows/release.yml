name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  docker:
    runs-on: ${{ matrix.os }}

    permissions:
      packages: write
      contents: read

    strategy:
      fail-fast: true
      matrix:
        arch: ["amd64"]
        include:
          - arch: amd64
            os: ubuntu-20.04

    steps:
    - uses: actions/checkout@v4

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

    - name: Tag release
      run: |
        release=`echo ${{ steps.get_version.outputs.VERSION }} | cut -d'-' -f2`
        cat BUILD.bazel | sed s/-jc+master/-jc-$release/ | sed s/100master/${release:1}/ > BUILD.versioned
        cat BUILD.versioned
        mv BUILD.versioned BUILD.bazel

    # - name: Set up QEMU
    #   run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set image identity
      id: image_id
      run: echo ::set-output name=ID::${GITHUB_REPOSITORY,,}

    - name: Publish to GitHub Container Registry
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/${{ matrix.arch }}
        push: true
        tags: |
          ghcr.io/${{ steps.image_id.outputs.ID }}:latest-${{ matrix.arch }}

    - name: Extract built rTorrent artifacts from Docker image
      run: |
        docker buildx build --platform linux/${{ matrix.arch }} --target build -o type=tar . > ../out.tar
        tar xvf ../out.tar root/rtorrent/dist

    - name: Prepare distribution archive
      run: |
        mkdir dist-${{ matrix.arch }}
        cp doc/rtorrent.rc doc/rtorrent@.service root/rtorrent/dist/rtorrent dist-${{ matrix.arch }}

    - uses: actions/upload-artifact@v4
      with:
        name: rtorrent-linux-${{ matrix.arch }}
        path: dist-${{ matrix.arch }}/*

    - uses: actions/upload-artifact@v4
      with:
        name: rtorrent-deb-${{ matrix.arch }}
        path: root/rtorrent/dist/rtorrent-deb.deb

  create-release:
    needs: docker
    runs-on: ubuntu-20.04

    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - uses: actions/download-artifact@v4
      with:
        path: artifacts

    - run: |
        cp artifacts/rtorrent-linux-amd64/* .
        cp artifacts/rtorrent-linux-amd64/rtorrent rtorrent-linux-amd64
        cp artifacts/rtorrent-deb-amd64/rtorrent-deb.deb rtorrent-linux-amd64.deb

    - name: Create Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ steps.get_version.outputs.VERSION }}
        files: |
          rtorrent-linux-amd64
          rtorrent-linux-amd64.deb
          rtorrent.rc
          rtorrent@.service